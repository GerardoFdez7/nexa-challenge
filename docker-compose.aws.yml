services:
  # MySQL Database for Production
  mysql:
    image: mysql:8.0
    container_name: nexa-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: nexa_bank
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./scripts/ddl.sql:/docker-entrypoint-initdb.d/01-ddl.sql
      - ./scripts/dml.sql:/docker-entrypoint-initdb.d/02-dml.sql
    networks:
      - nexa-network-prod
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    labels:
      - "aws.managed=true"
      - "aws.name=nexa-mysql"
      - "aws.type=database"

  # Backend API for Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nexa-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/nexa_bank"
      PORT: 3001
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - nexa-network-prod
    labels:
      - "aws.managed=true"
      - "aws.name=nexa-backend"
      - "aws.type=application"
      - "aws.http.main.loadbalancer.server.port=3001"
      - "traefik.enable=true"
      - "traefik.http.routers.nexa-backend.rule=Host(`api.nexa.caribbeandevelopers.space`)"
      - "traefik.http.routers.nexa-backend.tls=true"
      - "traefik.http.routers.nexa-backend.tls.certresolver=letsencrypt"

  # Frontend Next.js for Production
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexa-frontend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://api.nexa.caribbeandevelopers.space
    depends_on:
      - backend
    networks:
      - nexa-network-prod
    labels:
      - "aws.managed=true"
      - "aws.name=nexa-frontend"
      - "aws.type=application"
      - "aws.http.main.loadbalancer.server.port=3000"
      - "traefik.enable=true"
      - "traefik.http.routers.nexa-frontend.rule=Host(`nexa.caribbeandevelopers.space`)"
      - "traefik.http.routers.nexa-frontend.tls=true"
      - "traefik.http.routers.nexa-frontend.tls.certresolver=letsencrypt"

volumes:
  mysql_data_prod:
    driver: local

networks:
  nexa-network-prod:
    driver: bridge
